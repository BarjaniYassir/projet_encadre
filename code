#include <stdio.h>
#include <stdlib.h>
#include <string.h>

// Structure du produit
typedef struct {
    int ID;
    char Nom[30];
    char Description[100];
    char Username[30];
    float PrixUnitaire;
    int QuantiteStock;
    int SeuilAlerte;
    char dateE[10];
    char dateS[10];
} Produit;

// Fonction permettant à l'utilisateur de saisir son nom
void entrerNom(char Nom[30]) {
    printf("VEUILLEZ SAISIR VOTRE NOM: \n");
    scanf("%s", Nom);
}

// Tableau dynamique pour stocker les produits
Produit *Prod = NULL;
int nombreProduits = 0;


// Fonction pour ajouter un produit
void ajouterProduit() {
    Produit nouveauProduit;
    nouveauProduit.ID = nombreProduits + 1;

    printf("Saisissez le nom du produit : ");
    scanf("%s", nouveauProduit.Nom);
    printf("Saisissez la description du produit : ");
    scanf("%s", nouveauProduit.Description);
    printf("Saisissez votre nom d'utilisateur : ");
    scanf("%s", nouveauProduit.Username);
    printf("Saisissez le prix unitaire du produit : ");
    scanf("%f", &nouveauProduit.PrixUnitaire);
    printf("Saisissez la quantite en stock du produit : ");
    scanf("%d", &nouveauProduit.QuantiteStock);
    printf("Saisissez le seuil d'alerte du stock : ");
    scanf("%d", &nouveauProduit.SeuilAlerte);
    printf("Saisissez la date d'entree du produit : ");
    scanf("%s", nouveauProduit.dateE);
    printf("Saisissez la date de sortie du produit  : ");
    scanf("%s", nouveauProduit.dateS);

    Prod = realloc(Prod, (nombreProduits + 1) * sizeof(Produit));
    if (Prod == NULL) {
        printf("Erreur lors de l'allocation de memoire pour le nouveau produit.\n");
    }
    Prod[nombreProduits++] = nouveauProduit;
    
    printf("Produit ajoute avec succes !\n");
}

// Fonction pour lire les produits à partir du fichier
void afficherProduits(FILE *products) {
    FILE *fichier = fopen(products, "r");
    if (fichier == NULL) {
        printf("Erreur lors de l'ouverture du fichier de produits.\n");
        return;
    }

    Produit Prod;

    printf("+----+-------------------------+------------------------------+------------------------+--------------+----------+---------+------------+------------+\n");
    printf("| ID |          Nom            |          Description         |        Username        | Prix Unitaire|   Stock  | Seuil   | Date Entree| Date Sortie|\n");
    printf("+----+-------------------------+------------------------------+------------------------+--------------+----------+---------+------------+------------+\n");

    while (fscanf(fichier, "%d %s %s %s %f %d %d %s %s", &Prod.ID, Prod.Nom, Prod.Description,
                  Prod.Username, &Prod.PrixUnitaire, &Prod.QuantiteStock, &Prod.SeuilAlerte,
                  Prod.dateE, Prod.dateS) == 9) {
      printf("| %2d ", Prod.ID);
    printf("| %-23s ",Prod.Nom);
    printf("| %-28s ", Prod.Description);
    printf("| %-22s ", Prod.Username);
    printf("| %12.2f ", Prod.PrixUnitaire);
    printf("| %8d ", Prod.QuantiteStock);
    printf("| %7d ", Prod.SeuilAlerte);
    printf("| %-10s ", Prod.dateE);
    printf("| %-10s |\n", Prod.dateS);
    }

    printf("+----+-------------------------+------------------------------+------------------------+--------------+----------+---------+------------+------------+\n");

    fclose(fichier);
}

// Fonction pour modifier un produit dans la liste
void modifierProduit(int IDModif) {
    int i;
    for (i = 0; i < nombreProduits; i++) {
        if (Prod[i].ID == IDModif) {
            int choix;
            do {
                printf("Quelle rubrique voulez-vous modifier ?\n");
                printf("1. Nom\n");
                printf("2. Description\n");
                printf("3. Username\n");
                printf("4. Prix Unitaire\n");
                printf("5. Quantite en stock\n");
                printf("6. Seuil d'alerte de stock\n");
                printf("7. Date d'entree\n");
                printf("8. Date de sortie\n");
                printf("9. Quitter\n");
                printf("Votre choix : ");
                scanf("%d", &choix);

                switch (choix) {
                    case 1:
                        printf("Nouveau nom: ");
                        scanf("%s", Prod[i].Nom);
                        break;
                    case 2:
                        printf("Nouvelle description: ");
                        scanf("%s", Prod[i].Description);
                        break;
                    case 3:
                        printf("Nouvel username: ");
                        scanf("%s", Prod[i].Username);
                        break;
                    case 4:
                        printf("Nouveau prix unitaire: ");
                        scanf("%f", &Prod[i].PrixUnitaire);
                        break;
                    case 5:
                        printf("Nouvelle quantité en stock: ");
                        scanf("%d", &Prod[i].QuantiteStock);
                        break;
                    case 6:
                        printf("Nouveau seuil d'alerte de stock: ");
                        scanf("%d", &Prod[i].SeuilAlerte);
                        break;
                    case 7:
                        printf("Nouvelle date d'entree: ");
                        scanf("%s", Prod[i].dateE);
                        break;
                    case 8:
                        printf("Nouvelle date de sortie: ");
                        scanf("%s", Prod[i].dateS);
                        break;
                    case 9:
                        printf("Vous avez quitter la modification.\n");
                        break;
                    default:
                        printf("Choix invalide.\n");
                        break;
                }
            } while (choix != 9);
            printf("Produit modifie avec succes !\n");
            return;
        }
    }
    printf("Produit avec l'ID %d non trouve.\n", IDModif);
}
// Fonction pour rechercher un produit par son nom
void rechercherProduitParNom(char *nom) {
    int trouve = 0,i;

    printf("+----+-----------------------+----------------------------+------------------------------+--------------+----------+---------+------------+------------+\n");
    printf("| ID |         Nom           |         Description        |           Username           | Prix Unitaire|   Stock  | Seuil   | Date Entree| Date Sortie|\n");
    printf("+----+-----------------------+----------------------------+------------------------------+--------------+----------+---------+------------+------------+\n");

    for ( i = 0; i < nombreProduits; i++) {
        if (strcmp(Prod[i].Nom, nom) == 0) {
      printf("| %2d ", Prod[i].ID);
    printf("| %-23s ",Prod[i].Nom);
    printf("| %-28s ", Prod[i].Description);
    printf("| %-22s ", Prod[i].Username);
    printf("| %12.2f ", Prod[i].PrixUnitaire);
    printf("| %8d ", Prod[i].QuantiteStock);
    printf("| %7d ", Prod[i].SeuilAlerte);
    printf("| %-10s ", Prod[i].dateE);
    printf("| %-10s |\n", Prod[i].dateS);
    trouve = 1;
    }
 }
    printf("+----+-------------------------+------------------------------+------------------------+--------------+----------+---------+------------+------------+\n");
    if (!trouve) {
        printf("Aucun produit avec le nom '%s' n'a ete trouve.\n", nom);
    }
}

// Fonction pour rechercher un produit par le nom de l'utilisateur
void rechercherProduitParUtilisateur(char *utilisateur) {
    int trouve = 0,i;

    printf("+----+-----------------------+----------------------------+------------------------------+--------------+----------+---------+------------+------------+\n");
    printf("| ID |         Nom           |         Description        |           Username           | Prix Unitaire|   Stock  | Seuil   | Date Entree| Date Sortie|\n");
    printf("+----+-----------------------+----------------------------+------------------------------+--------------+----------+---------+------------+------------+\n");

    for ( i = 0; i < nombreProduits; i++) {
        if (strcmp(Prod[i].Username, utilisateur) == 0) {
          printf("| %2d ", Prod[i].ID);
    printf("| %-23s ",Prod[i].Nom);
    printf("| %-28s ", Prod[i].Description);
    printf("| %-22s ", Prod[i].Username);
    printf("| %12.2f ", Prod[i].PrixUnitaire);
    printf("| %8d ", Prod[i].QuantiteStock);
    printf("| %7d ", Prod[i].SeuilAlerte);
    printf("| %-10s ", Prod[i].dateE);
    printf("| %-10s |\n", Prod[i].dateS);
    trouve = 1;
    }
 }
    printf("+----+-------------------------+------------------------------+------------------------+--------------+----------+---------+------------+------------+\n");

    if (!trouve) {
        printf("Aucun produit avec le nom d'utilisateur '%s' n'a ete trouve.\n", utilisateur);
    }
}

// Fonction pour supprimer un produit de la liste
void supprimerProduit(int IDSupp) {
    int trouve = 0,i,j;

    for (i = 0; i < nombreProduits; i++) {
        if (Prod[i].ID == IDSupp) {
            for ( j = i; j < nombreProduits - 1; j++) {
                Prod[j] = Prod[j + 1];
            }
            nombreProduits--;
            trouve = 1;
            printf("Produit supprime avec succes !\n");
            break;
        }
    }

    if (!trouve) {
        printf("Produit avec l'ID %d non trouve.\n", IDSupp);
    }
}

// Fonction pour trier les produits par nom
void trierProduitsParNom() {
	int i,j;
	Produit temp;
    for ( i = 0; i < nombreProduits - 1; i++) {
        for (j = 0; j < nombreProduits - i - 1; j++) {
            if (strcmp(Prod[j].Nom, Prod[j + 1].Nom) > 0) {
                temp = Prod[j];
                Prod[j] = Prod[j + 1];
                Prod[j + 1] = temp;
            }
        }
    }
}

// Fonction pour trier les produits par prix
void trierProduitsParPrix() {
	int i,j;
	Produit temp;
    for (i = 0; i < nombreProduits - 1; i++) {
        for (j = 0; j < nombreProduits - i - 1; j++) {
            if (Prod[j].PrixUnitaire > Prod[j+ 1].PrixUnitaire) {
                temp = Prod[j];
                Prod[j] = Prod[j + 1];
                Prod[j + 1] = temp;
            }
        }
    }
}

// Fonction pour sauvegarder les produits dans un fichier
void sauvegarderProduits(FILE *products) {
	int i;
    FILE *fichier = fopen(products, "w");
    if (fichier == NULL) {
        printf("Erreur lors de l'ouverture du fichier pour sauvegarder les produits.\n");
        return;
    }

    for (i = 0; i < nombreProduits; i++) {
        fprintf(fichier, "%d %s %s %s %.2f %d %d %s %s\n", Prod[i].ID, Prod[i].Nom,Prod[i].Description,
                Prod[i].Username, Prod[i].PrixUnitaire, Prod[i].QuantiteStock, Prod[i].SeuilAlerte,
                Prod[i].dateE, Prod[i].dateS);
    }

    fclose(fichier);
}

int main() {
    int choix, IDModif;
    char Nom[30], nomRecherche[30], utilisateurRecherche[30];

    entrerNom(Nom);

    do {
        printf("Operations disponibles :\n");
        printf("1. Ajouter un produit\n");
        printf("2. Supprimer un produit\n");
        printf("3. Modifier un produit\n");
        printf("4. Rechercher un produit par nom\n");
        printf("5. Rechercher un produit par utilisateur\n");
        printf("6. Afficher les produits\n");
        printf("7. Trier les produits par nom\n");
        printf("8. Trier les produits par prix\n");
        printf("9. Sauvegarder les produits\n");
        printf("10. Quitter\n");
        printf("Votre choix : ");
        scanf("%d", &choix);

        switch (choix) {
            case 1:
                ajouterProduit();
                break;
            case 2:
                printf("Veuillez saisir l'ID du produit a supprimer : ");
                scanf("%d", &IDModif);
                supprimerProduit(IDModif);
                break;
            case 3:
                printf("Veuillez saisir l'ID du produit a modifier : ");
                scanf("%d", &IDModif);
                modifierProduit(IDModif);
                break;
            case 4:
                printf("Veuillez saisir le nom du produit a rechercher : ");
                scanf("%s", nomRecherche);
                rechercherProduitParNom(nomRecherche);
                break;
            case 5:
                printf("Veuillez saisir le nom d'utilisateur a rechercher : ");
                scanf("%s", utilisateurRecherche);
                rechercherProduitParUtilisateur(utilisateurRecherche);
                break;
            case 6:
                afficherProduits("products.txt");
                break;
            case 7:
                trierProduitsParNom();
                printf("Produits tries par nom avec succes !\n");
                break;
            case 8:
                trierProduitsParPrix();
                printf("Produits tries par prix avec succes !\n");
                break;
            case 9:
                sauvegarderProduits("products.txt");
                printf("Produits sauvegardes avec succes !\n");
                break;
            case 10:
                printf("Programme termine.\n");
                break;
            default:
                printf("Choix invalide.\n");
        }
    } while (choix != 10);

    free(Prod);
    return 0;
}
